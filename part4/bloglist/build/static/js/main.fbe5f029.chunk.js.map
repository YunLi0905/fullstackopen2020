{"version":3,"sources":["components/Blog.js","components/Notification.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Blog","blog","title","author","Notification","message","className","token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","res","update","id","put","setToken","newToken","login","credentials","App","useState","blogs","setBlogs","errorMessage","setErrorMessage","username","setUsername","password","setPassword","user","setUser","useEffect","blogService","loggedUserJSON","window","localStorage","getItem","JSON","parse","handleLogout","event","preventDefault","console","log","clear","exception","setTimeout","handleLogin","loginService","setItem","stringify","onSubmit","type","value","name","onChange","target","onClick","map","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fbe5f029.chunk.js","sourcesContent":["import React from 'react'\r\nconst Blog = ({ blog }) => (\r\n  <div>\r\n    {blog.title} {blog.author}\r\n  </div>\r\n)\r\n\r\nexport default Blog\r\n","import React from \"react\"\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return <div className=\"error\">{message}</div>\n}\n\nexport default Notification\n","import axios from \"axios\"\nconst baseUrl = \"/api/blogs\"\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ยง{newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token }\n  }\n\n  const res = await axios.post(baseUrl, newObject, config)\n  return res.data\n}\n\nconst update = (id, newObject) => {\n  const req = axios.put(`${baseUrl} /${id}`, newObject)\n  return req.then(res => res.data)\n}\n\nexport default { getAll, create, update, setToken }\n","import axios from \"axios\"\nconst baseUrl = \"/api/login\"\n\nconst login = async credentials => {\n  const res = await axios.post(baseUrl, credentials)\n  return res.data\n}\n\nexport default { login }\n","import React, { useState, useEffect } from \"react\"\nimport Blog from \"./components/Blog\"\nimport Notification from \"./components/Notification\"\nimport blogService from \"./services/blogs\"\nimport loginService from \"./services/login\"\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [newBlog, setNewBlog] = useState(\"\")\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [username, setUsername] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [user, setUser] = useState(null)\n\n  useEffect(() => {\n    blogService.getAll().then(blogs => setBlogs(blogs))\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem(\"loggedBlogappUser\")\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const addBlog = event => {\n    event.preventDefault()\n    const blogObject = {\n      title: newBlog.title,\n      author: newBlog.author\n    }\n\n    blogService.create(blogObject).then(returnedBlog => {\n      setBlogs(blogs.concat(returnedBlog))\n      setNewBlog(\"\")\n    })\n  }\n\n  const handleLogout = async event => {\n    event.preventDefault()\n    console.log(\"log out account: \", username)\n    try {\n      window.localStorage.clear(\"loggedBlogappUser\")\n\n      setUser(null)\n      setUsername(\"\")\n      setPassword(\"\")\n    } catch (exception) {\n      setErrorMessage(exception.message)\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleLogin = async event => {\n    event.preventDefault()\n    console.log(\"logging in with ,\", username, password)\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      })\n\n      window.localStorage.setItem(\"loggedBlogappUser\", JSON.stringify(user))\n\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername(\"\")\n      setPassword(\"\")\n    } catch (exception) {\n      setErrorMessage(\"Wrong credentials\")\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleBlogChange = event => {\n    setNewBlog(event.target.value)\n  }\n\n  const loginForm = () => (\n    <form onSubmit={handleLogin}>\n      <div>\n        username\n        <input\n          type=\"text\"\n          value={username}\n          name=\"Username\"\n          onChange={({ target }) => setUsername(target.value)}\n        />\n      </div>\n      <div>\n        password\n        <input\n          type=\"text\"\n          value={password}\n          name=\"password\"\n          onChange={({ target }) => setPassword(target.value)}\n        />\n      </div>\n      <button type=\"submit\">login</button>\n    </form>\n  )\n\n  const blogForm = () => (\n    <form onSubmit={addBlog}>\n      <input value={newBlog} onChange={handleBlogChange} />\n    </form>\n  )\n\n  return (\n    <div>\n      <h2>blogs</h2>\n      <Notification message={errorMessage} />\n      {user === null ? (\n        <div>\n          <h2>Log in to application</h2>\n          {loginForm()}\n          <button onClick={handleLogout}>log out</button>\n        </div>\n      ) : (\n        <div>\n          <p>{user.username} logged-in</p>\n          {blogs.map(blog => (\n            <Blog key={blog.id} blog={blog} />\n          ))}\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}